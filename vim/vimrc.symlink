syntax on
filetype off

" Wrap gitcommit file types at the appropriate length
set nocompatible              " be iMproved, required

" set the runtime path to include Vundle and initialize
call plug#begin('~/.local/share/nvim/plugged')

Plug 'Valloric/MatchTagAlways'
Plug 'Valloric/YouCompleteMe', { 'do': './install.py' }
Plug 'tpope/vim-markdown'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'DavidEGx/ctrlp-smarttabs'
Plug 'othree/html5.vim'
Plug 'tpope/vim-sleuth'
Plug 'tpope/vim-fugitive'
Plug 'fatih/vim-go'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'rust-lang/rust.vim'
Plug 'w0rp/ale'

call plug#end()

imap qq <Esc>
" Disable default q behaviour, it's annoying
map q <Nop>


" CtrlP settings:
" ignore these files
"let g:ctrlp_custom_ignore = {
" \ 'dir':  '\v[\/]\.(git|hg|svn)$',
"" \ 'file': '\v\.(h5|csv|tgz|bak|jpg|jpeg|pyc)$',
"" \ 'link': '',
"" \ }
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*/.git/*,*.h5,*.tgz,*.csv,*.bak,*.jpg,*.jpeg,*.pyc
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']

" Cache the results of ctrlp
let g:ctrlp_cache_dir = $HOME . '/.cache/ctrlp'

let g:ycm_autoclose_preview_window_after_completion=1

" Make YCM use python3 for python3 support
let g:ycm_python_binary_path = 'python3'

filetype plugin indent on
" show existing tab with 4 spaces width
set tabstop=4
" when indenting with '>', use 4 spaces width
set shiftwidth=4
" On pressing tab, insert 4 spaces
set expandtab

" Tab
nnoremap <c-t>n <Esc>:tabnew<CR>
nnoremap <c-t>h <Esc>:tabprevious<CR>
nnoremap <c-t>l <Esc>:tabnext<CR>

" Tab split
nnoremap <c-w>% <Esc>:vsplit<CR>
nnoremap <c-w>" <Esc>:split<CR>
nnoremap <leader>% :MtaJumpToOtherTag<cr>


noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

set whichwrap+=h,l
set cursorline
set number

let g:ctrlp_extensions = ['smarttabs']

command Wsp execute "%s/\\s\\+$"

"let g:hybrid_use_Xresources = 1

"let g:python_host_prog = '/Users/george/Library/Python/3.5/lib/python/site-packages/neovim'
set clipboard+=unnamedplus

nnoremap <buffer> <c-g> :exec '!python3' shellescape(@%, 1)<cr>

set colorcolumn=120

let b:ale_linters = ['flake8', 'pylint']
let g:ale_fixers = {
\      'python': ['autopep8', 'isort', 'remove_trailing_lines', 'trim_whitespace']
\      }

let g:ale_python_flake8_args = '--max-line-length=120'
let g:ale_python_autopep8_options = '--max-line-length=120'



let g:ale_fix_on_save = 1
let g:ale_completion_enabled = 1

" Nerdtree
map <C-n> :NERDTreeToggle<CR>

